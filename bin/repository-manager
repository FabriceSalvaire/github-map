#! /usr/bin/env python3

####################################################################################################
#
# Copyright (C) 2017 Salvaire Fabrice
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
####################################################################################################

####################################################################################################

import argparse

from GithubTools.Account import Account

####################################################################################################

parser = argparse.ArgumentParser(description='...')
parser.add_argument('repository', metavar='Repository',
                    help='repository name')
parser.add_argument('--upload-issues',
                    action='store_true', default=False,
                    help='upload issues from Github')

args = parser.parse_args()

####################################################################################################

class RepositoryManager(Account):

    ##############################################

    def __init__(self, name):

        super().__init__()

        self._name = name

        self.login()
        self._repository = self.github.get_user().get_repo(name)

        # get_issues(milestone=NotSet, state=NotSet, assignee=NotSet, mentioned=NotSet, labels=NotSet, sort=NotSet, direction=NotSet, since=NotSet)
        for issue in self._repository.get_issues():
            print()
            print('-'*100)
            print('#{} {}'.format(issue.number, issue.title))
            print(issue.created_at)
            print('labels:', issue.labels)
            print('milestone:', issue.milestone)
            print()
            print(issue.body)
            for comment in issue.get_comments():
                print('-'*50)
                print(comment.user)
                print(comment.created_at)
                print(comment.body)

####################################################################################################

repository_manager = RepositoryManager(args.repository)
